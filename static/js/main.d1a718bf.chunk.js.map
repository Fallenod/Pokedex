{"version":3,"sources":["ThemeSwitcher.js","logo.svg","Header.js","pokemonsData.js","typeColors.js","Type.js","Card.js","Cards.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeSwitcher","lightMark","className","onChange","e","document","documentElement","style","setProperty","for","type","id","Header","href","src","logo","loading","alt","getPokemons","a","limit","offset","data","i","url","fetch","res","json","result","status","Error","Object","values","typeColors","fire","grass","electric","water","ground","rock","fairy","poison","bug","dragon","psychic","flying","fighting","normal","dark","ghost","steel","ice","unknown","shadow","Type","typeName","color","typeStyle","backgroundColor","Card","name","types","srcImg","toString","padStart","map","Cards","props","useState","undefined","items","setItems","fetchPokemons","useEffect","toUpperCase","slice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yLA8BiBA,MA5BjB,WACI,IAAIC,GAAY,EAiBhB,OACQ,qBAAKC,UAAU,uBAAf,SACI,wBAAOC,SAlBnB,SAAqBC,GACdH,GACCI,SAASC,gBAAgBC,MAAMC,YAAY,YAAY,WACvDH,SAASC,gBAAgBC,MAAMC,YAAY,cAAc,WACzDH,SAASC,gBAAgBC,MAAMC,YAAY,eAAe,WAC1DH,SAASC,gBAAgBC,MAAMC,YAAY,WAAW,eAGtDH,SAASC,gBAAgBC,MAAMC,YAAY,YAAY,WACvDH,SAASC,gBAAgBC,MAAMC,YAAY,cAAc,WACzDH,SAASC,gBAAgBC,MAAMC,YAAY,eAAe,WAC1DH,SAASC,gBAAgBC,MAAMC,YAAY,WAAW,cAE1DP,GAAaA,GAKyBC,UAAU,eAAeO,IAAI,WAA3D,UACI,uBAAQP,UAAU,eAAeQ,KAAK,WAAWC,GAAG,aACpD,qBAAKT,UAAU,uBCxBpB,MAA0B,iCCkBxBU,MAdjB,WACI,OACH,sBAAKV,UAAU,SAAf,UACW,sBAAKA,UAAU,cAAf,UACI,mBAAGW,KAAK,IAAR,SACI,qBAAKC,IAAKC,EAAMC,QAAQ,OAAOC,IAAI,OAEvC,oBAAIf,UAAU,eAAd,wBAEJ,cAAC,EAAD,Q,8BCZCgB,EAAW,uCAAG,oDAAAC,EAAA,sDAAOC,EAAP,+BAAe,GAAIC,EAAnB,+BAA4B,EAC/CC,EAAO,GAEHC,EADOF,EAAJ,IAAXA,EAAwB,EAAa,EAFd,YAGHE,GAAKH,GAHF,wBAIbI,EAJa,4CAI6BD,GAJ7B,SAKDE,MAAMD,GALL,cAKbE,EALa,iBAMEA,EAAIC,OANN,cAMbC,EANa,QAOTC,QAAU,KAPD,uBAQTC,MAAM,mBARG,QAUnBR,EAAKC,GAAKK,EAVS,QAGSL,IAHT,gDAahBQ,OAAOC,OAAOV,IAbE,4CAAH,qDCDXW,EAAa,CACtBC,KAAM,UACNC,MAAO,UACVC,SAAU,UACVC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,MAAO,UACPC,OAAQ,UACRC,IAAK,UACLC,OAAQ,UACRC,QAAS,UACTC,OAAQ,UACRC,SAAU,UACVC,OAAQ,UACLC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,IAAK,UACLC,QAAS,UACTC,OAAQ,WCJIC,EAbH,SAAC,GAEP,IADJC,EACG,EADHA,SAEKC,EAAQvB,EAAWsB,GACnBE,EAAY,GAEhB,OADAA,EAAUC,gBAAkBF,EAExB,qBAAKjD,MAAOkD,EAAYvD,UAAU,aAAlC,SACI,mBAAGA,UAAU,YAAb,SAA0BqD,OCiBtBI,EAzBH,SAAC,GAIP,IAHLhD,EAGI,EAHJA,GACAiD,EAEI,EAFJA,KACAC,EACI,EADJA,MAGIC,EAAS,mGAAqGnD,EAAK,OACvH,OACE,sBAAKT,UAAU,iBAAf,UACY,qBAAMA,UAAU,gBAAhB,SACI,qBAAKY,IAAMgD,EAAQ7C,IAAI,OAE3B,sBAAKf,UAAU,iBAAf,UACI,oBAAIA,UAAU,OAAd,SAAsB0D,IACtB,sBAAM1D,UAAU,SAAhB,SAA0BS,EAAGoD,WAAWC,SAAS,EAAG,UAExD,qBAAK9D,UAAU,kBAAf,SACC2D,EAAMI,KAAI,SAAAvD,GAAI,OACb,cAAC,EAAD,CAAM6C,SAAY7C,EAAKA,KAAKkD,gBCa7BM,EA5BH,SAACC,GACX,MAA0BC,wBAASC,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAa,uCAAG,4BAAArD,EAAA,sEACCD,EAAY,IADb,OACZI,EADY,OAElBiD,EAASjD,GAFS,2CAAH,qDAQnB,OAHAmD,qBAAU,WACND,MACD,IACI,qBAAKtE,UAAU,QAAf,SAEFoE,EAAQA,EAAML,KAAI,gBAAEtD,EAAF,EAAEA,GAAIiD,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MAAZ,OACX,qBAAK3D,UAAY,cAAjB,SACI,cAAC,EAAD,CACAS,GAAIA,EACJiD,KAAMA,EAAK,GAAGc,cAAgBd,EAAKe,MAAM,GACzCd,MAAOA,SAKb,aCjBCe,EATH,SAACT,GACX,OACE,gCACC,cAAC,EAAD,IACA,cAAC,EAAD,eAAWA,QCKDU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnF,SAASoF,eAAe,SAE1BZ,M","file":"static/js/main.d1a718bf.chunk.js","sourcesContent":["\r\n\r\nfunction ThemeSwitcher() {\r\n    let lightMark = true\r\n    function changeTheme(e) {\r\n        if(lightMark) {\r\n            document.documentElement.style.setProperty('--primary',\"#313131\");\r\n            document.documentElement.style.setProperty('--secondary',\"#424242\");\r\n            document.documentElement.style.setProperty('--info-color',\"#eceff1\");\r\n            document.documentElement.style.setProperty('--invert',\"invert(1)\");\r\n        }\r\n        else {\r\n            document.documentElement.style.setProperty('--primary',\"#eeeeee\");\r\n            document.documentElement.style.setProperty('--secondary',\"#dadada\");\r\n            document.documentElement.style.setProperty('--info-color',\"#4d4d4d\");\r\n            document.documentElement.style.setProperty('--invert',\"invert(0)\");\r\n        }\r\n        lightMark = !lightMark\r\n    }\r\n  \r\n    return (\r\n            <div className=\"theme-switch-wrapper\">\r\n                <label onChange={changeTheme} className=\"theme-switch\" for=\"checkbox\">\r\n                    <input  className=\"switch-input\" type=\"checkbox\" id=\"checkbox\" />\r\n                    <div className=\"slider round\"></div>\r\n                </label>\r\n            </div>\r\n    );\r\n  }\r\n\r\n  export default ThemeSwitcher","export default __webpack_public_path__ + \"static/media/logo.cb8d53b5.svg\";","import ThemeSwitcher from \"./ThemeSwitcher\"\r\n// import  './Header.module.css';\r\nimport logo from './logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n <div className=\"header\">\r\n            <div className=\"header-logo\">\r\n                <a href=\"/\">\r\n                    <img src={logo} loading=\"lazy\" alt=\"\"/>\r\n                </a>\r\n                <h1 className=\"header-title\">Pokedex</h1>\r\n            </div>\r\n            <ThemeSwitcher />\r\n        </div>\r\n    );\r\n  }\r\n\r\n  export default Header;","\r\nexport const getPokemons = async (limit = 25, offset = 0) => {\r\n    let data = {}\r\n    offset === 0 ? offset = 1 : offset = 0\r\n    for(let i = offset; i <= limit; i++) {\r\n        const url =`https://pokeapi.co/api/v2/pokemon/${i}`\r\n        const res = await fetch(url);\r\n        const result = await res.json()\r\n        if(result.status >= 400) {\r\n            throw Error('Something wrong')\r\n        }\r\n        data[i] = result\r\n\r\n    }\r\n    return Object.values(data)\r\n}\r\n\r\n\r\n","export const typeColors = {\r\n    fire: '#ff7539',\r\n    grass: '#64dd17',\r\n\telectric: '#ffff00',\r\n\twater: '#DEF3FD',\r\n\tground: '#f4e7da',\r\n\trock: '#d5d5d4',\r\n\tfairy: '#fceaff',\r\n\tpoison: '#B97FC9',\r\n\tbug: '#f8d5a3',\r\n\tdragon: '#97b3e6',\r\n\tpsychic: '#eaeda1',\r\n\tflying: '#F0F8FF',\r\n\tfighting: '#E6E0D4',\r\n\tnormal: '#F5F5F5',\r\n    dark: '#707070',\r\n    ghost: '#7B62A3',\r\n    steel: '#9EB7B8',\r\n    ice: '#51C4E7',\r\n    unknown: '#FFFFFF',\r\n    shadow: '#000051',\r\n}","import { typeColors } from \"./typeColors\";\r\n\r\n\r\nconst Type = ({\r\n   typeName\r\n}) => {\r\n    let color = typeColors[typeName]\r\n    let typeStyle = {}\r\n    typeStyle.backgroundColor = color\r\n    return (\r\n        <div style={typeStyle}  className=\"type-block\">\r\n            <p className=\"type-text\">{typeName}</p>\r\n        </div>\r\n  );\r\n};\r\n\r\n export default Type;","\r\nimport Type from './Type';\r\n\r\nconst Card = ({\r\n  id,\r\n  name,\r\n  types\r\n}) => {\r\n\r\n  let srcImg = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/\" + id + \".png\"\r\n  return (\r\n    <div className=\"poke-container\">\r\n                <div  className=\"img-container\">\r\n                    <img src= {srcImg} alt=\"\" />\r\n                </div>\r\n                <div className=\"info-container\">\r\n                    <h3 className=\"name\">{name}</h3>\r\n                    <span className=\"number\">{id.toString().padStart(3, '0')}</span>\r\n                </div>\r\n                <div className=\"types-container\">\r\n                {types.map(type => (\r\n                  <Type typeName = {type.type.name}/>\r\n                ))}\r\n                </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n export default Card;","\r\nimport { useEffect, useState } from \"react\"\r\nimport { getPokemons } from \"./pokemonsData\";\r\nimport Card from './Card';\r\n\r\n\r\nconst Cards = (props) =>  {\r\n    const [items, setItems] = useState(undefined);\r\n    \r\n    const fetchPokemons = async () => {\r\n        const data = await getPokemons(30)\r\n        setItems(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPokemons()\r\n    }, []);\r\n    return <div className=\"cards\">\r\n        {\r\n         items ? items.map(({id, name, types}) => (\r\n                <div className = \"cards__item\" >\r\n                    <Card \r\n                    id={id} \r\n                    name={name[0].toUpperCase() + name.slice(1)} \r\n                    types={types}\r\n                    />\r\n                </div>\r\n            ))\r\n           \r\n            : 'loading'\r\n        }\r\n    </div>\r\n}\r\n\r\n  export default Cards;","import Header from './Header';\nimport Cards from './Cards.js';\n\nconst App = (props) => {\n  return (\n    <div>\n     <Header />\n     <Cards {...props} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}